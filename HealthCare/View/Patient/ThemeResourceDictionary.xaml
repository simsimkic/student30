<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:HealthCare.View.Patient"
                    xmlns:fa="http://schemas.fontawesome.io/icons/">

    <ResourceDictionary.MergedDictionaries>

        <ResourceDictionary>
            <Color x:Key="ThemeColor">#006bb3</Color>
            <SolidColorBrush x:Key="ThemeBrush" Color="{DynamicResource ThemeColor}"/>


            <Style x:Key="BasicButton" TargetType="{x:Type Button}">
                <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" BorderThickness="1" BorderBrush="Black" Background="White">
                                <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Button.Effect">
                                        <Setter.Value>
                                            <DropShadowEffect Color="{DynamicResource ThemeColor}" Direction="320" ShadowDepth="5" BlurRadius="5" Opacity="0.5" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="LinkRadioButton" TargetType="{x:Type RadioButton}">
                <Setter Property="GroupName" Value="pageGroup"/>
                <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <TextBlock x:Name="textBlock" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Foreground" Value="{DynamicResource ThemeBrush}"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="TextDecorations" TargetName="textBlock" Value="Underline" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="LinkButton" TargetType="{x:Type Button}">
                <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <TextBlock x:Name="textBlock" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Foreground" Value="{DynamicResource ThemeBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="WindowButton" TargetType="{x:Type Button}">
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="WindowIcon" TargetType="{x:Type fa:ImageAwesome}">
                <Setter Property="Foreground" Value="Black"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Foreground" Value="{DynamicResource ThemeBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ReferenceRadioButton" TargetType="{x:Type RadioButton}">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="GroupName" Value="reference"/>
            </Style>

            <Style x:Key="HintTextBlock" TargetType="{x:Type TextBlock}">
                <Setter Property="IsHitTestVisible" Value="False"/>
                <Setter Property="Text" Value="{Binding Text, RelativeSource={RelativeSource AncestorType=TextBlock}}"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Padding" Value="10 2 0 0"/>
                <Setter Property="Margin" Value="5 0"/>
                <Setter Property="Foreground" Value="LightGray"/>
                <Setter Property="Visibility" Value="Collapsed"/>
            </Style>

            <ControlTemplate x:Key="MenuTopMore" TargetType="MenuItem">
                <Grid Cursor="Hand">
                    <fa:ImageAwesome Icon="EllipsisV" Style="{StaticResource WindowIcon}" Height="20"/>

                    <Popup IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False">
                        <Border BorderThickness="1" Background="White" BorderBrush="#E0E0E0">
                            <StackPanel IsItemsHost="True" />
                        </Border>
                    </Popup>
                </Grid>
            </ControlTemplate>
            
            <ControlTemplate x:Key="MenuTopUser" TargetType="MenuItem">
                <Grid Cursor="Hand">
                    <fa:ImageAwesome Icon="User" Style="{StaticResource WindowIcon}" Width="20"/>

                    <Popup IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False">
                        <Border BorderThickness="1" Background="White" BorderBrush="#E0E0E0">
                            <StackPanel IsItemsHost="True" />
                        </Border>
                    </Popup>
                </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="MenuTop" TargetType="MenuItem">
                <Grid Cursor="Hand">
                    <Label Content="{TemplateBinding Header}" FontSize="20" VerticalAlignment="Center">
                        <Label.Style>
                            <Style TargetType="{x:Type Label}">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Foreground" Value="{DynamicResource ThemeBrush}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                            
                    <Popup IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False">
                        <Border BorderThickness="1" Background="White" BorderBrush="#E0E0E0">
                            <StackPanel IsItemsHost="True" />
                        </Border>
                    </Popup>
                </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="MenuSub" TargetType="MenuItem">
                <Grid x:Name="panel" Cursor="Hand">
                    <Label Content="{TemplateBinding Header}" Margin="20,0,20,0" Foreground="Black"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsHighlighted" Value="True">
                        <Setter Property="Background" TargetName="panel" Value="#EFF6FC" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style TargetType="Menu">
                <Setter Property="Background" Value="Transparent" />
            </Style>

            <Style TargetType="{x:Type DatePicker}">
                <Setter Property="TextElement.FontSize" Value="24" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="DatePicker.CalendarStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type Calendar}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Calendar}">
                                        <Viewbox Width="{Binding MaxWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DatePicker}}}">
                                            <CalendarItem x:Name="PART_CalendarItem"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"/>
                                        </Viewbox>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>

            <local:StringConcatenateConverter x:Key="StringConcatenate"/>
            <local:DateConcatenateConverter x:Key="DateConcatenate"/>
            <local:NullVisibilityConverter x:Key="NullVisibilityConverter"/>
            <local:PathConverter x:Key="PathConverter"/>
            <local:SubstringConverter x:Key="SubstringConverter"/>

        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

</ResourceDictionary>